{"ast":null,"code":"import baseURL from \"../config\";\n\n//used for register user in Signup.js\nconst create = async user => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/register\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//Used to List the users in the Users.js\nconst list = async signal => {\n  try {\n    let response = await fetch(baseURL + \"/api/users\", {\n      method: \"GET\",\n      signal: signal\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//reading the data by userId used in EditProfile.js and Profile.js\nconst read = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\n      method: \"GET\",\n      signal: signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//update will work in the EditProfile.js\nconst update = async (params, credentials, user) => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      },\n      body: JSON.stringify(user)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n//used in the DeleteUser.js\nconst remove = async (params, credentials) => {\n  try {\n    let response = await fetch(baseURL + \"api/users\" + params.userId, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n//used in the FindPeople.js\nconst follow = async (params, credentials, followId) => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/follow/\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        followId: followId\n      })\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nconst unfollow = async (params, credentials, unfollowId) => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/unfollow/\", {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      },\n      body: JSON.stringify({\n        userId: params.userId,\n        unfollowId: unfollowId\n      })\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n//used in the FindPeople.js\nconst findPeople = async (params, credentials, signal) => {\n  try {\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\n      method: \"GET\",\n      signal: signal,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + credentials.t\n      }\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport { create, list, remove, read, update, follow, unfollow, findPeople };","map":{"version":3,"names":["baseURL","create","user","response","fetch","method","headers","Accept","body","JSON","stringify","json","err","console","log","list","signal","read","params","credentials","userId","Authorization","t","update","remove","follow","followId","unfollow","unfollowId","findPeople"],"sources":["D:/social-frontend/src/user/api-user.js"],"sourcesContent":["import baseURL from \"../config\";\r\n\r\n//used for register user in Signup.js\r\nconst create = async (user) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//Used to List the users in the Users.js\r\nconst list = async (signal) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users\", {\r\n      method: \"GET\",\r\n      signal: signal,\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//reading the data by userId used in EditProfile.js and Profile.js\r\nconst read = async (params, credentials, signal) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\r\n      method: \"GET\",\r\n      signal: signal,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//update will work in the EditProfile.js\r\nconst update = async (params, credentials, user) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n//used in the DeleteUser.js\r\nconst remove = async (params, credentials) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"api/users\" + params.userId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n    });\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n//used in the FindPeople.js\r\nconst follow = async (params, credentials, followId) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/follow/\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n      body: JSON.stringify({ userId: params.userId, followId: followId }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst unfollow = async (params, credentials, unfollowId) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/unfollow/\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n      body: JSON.stringify({ userId: params.userId, unfollowId: unfollowId }),\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n//used in the FindPeople.js\r\nconst findPeople = async (params, credentials, signal) => {\r\n  try {\r\n    let response = await fetch(baseURL + \"/api/users/\" + params.userId, {\r\n      method: \"GET\",\r\n      signal: signal,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + credentials.t,\r\n      },\r\n    });\r\n\r\n    return await response.json();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport { create, list, remove, read, update, follow, unfollow, findPeople };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}