{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Paper from '@material-ui/core/Paper';\n// import List from '@material-ui/core/List';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import Avatar from '@material-ui/core/Avatar';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import Typography from '@material-ui/core/Typography';\n// import { Link } from 'react-router-dom';\n// import { findPeople, follow } from './api-user.js';\n// import auth from './../auth/auth-helper';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import ViewIcon from '@material-ui/icons/Visibility';\n// import baseURL from '../config.js';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: theme.mixins.gutters({\n//     padding: theme.spacing(1),\n//     margin: 0,\n//   }),\n//   title: {\n//     margin: `${theme.spacing(3)}px ${theme.spacing(1)}px ${theme.spacing(2)}px`,\n//     color: theme.palette.openTitle,\n//     fontSize: '1em',\n//   },\n//   avatar: {\n//     marginRight: theme.spacing(1),\n//   },\n//   follow: {\n//     right: theme.spacing(2),\n//   },\n//   snack: {\n//     color: theme.palette.protectedTitle,\n//   },\n//   viewButton: {\n//     verticalAlign: 'middle',\n//   },\n// }));\n\n// export default function FindPeople() {\n//   const classes = useStyles();\n//   const [values, setValues] = useState({\n//     users: [],\n//     open: false,\n//     followMessage: '',\n//   });\n//   const jwt = auth.isAuthenticated();\n\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     const signal = abortController.signal;\n\n//     findPeople(\n//       {\n//         userId: jwt.user._id,\n//       },\n//       {\n//         t: jwt.token,\n//       },\n//       signal\n//     ).then((data) => {\n//       if (data && data.error) {\n//         console.log(data.error);\n//       } else {\n//         setValues({ ...values, users: data });\n//       }\n//     });\n//     return function cleanup() {\n//       abortController.abort();\n//     };\n//   }, []);\n//   const clickFollow = (user, index) => {\n//     follow(\n//       {\n//         userId: jwt.user._id,\n//       },\n//       {\n//         t: jwt.token,\n//       },\n//       user._id\n//     ).then((data) => {\n//       if (data.error) {\n//         console.log(data.error);\n//       } else {\n//         let toFollow = values.users;\n//         toFollow.splice(index, 1);\n//         setValues({ ...values, users: toFollow, open: true, followMessage: `Following ${user.name}!` });\n//       }\n//     });\n//   };\n//   const handleRequestClose = (event, reason) => {\n//     setValues({ ...values, open: false });\n//   };\n//   return (\n//     <div>\n//       <Paper className={classes.root} elevation={4}>\n//         <Typography type=\"title\" className={classes.title}>\n//           Who to follow\n//         </Typography>\n//         <List>\n//           {values.users.map((item, i) => {\n//             return (\n//               <span key={i}>\n//                 <ListItem>\n//                   <ListItemAvatar className={classes.avatar}>\n//                     <Avatar src={baseURL + '/api/users/photo/' + item._id} />\n//                   </ListItemAvatar>\n//                   <ListItemText primary={item.name} />\n//                   <ListItemSecondaryAction className={classes.follow}>\n//                     <Link to={'/user/' + item._id}>\n//                       <IconButton variant=\"contained\" color=\"secondary\" className={classes.viewButton}>\n//                         <ViewIcon />\n//                       </IconButton>\n//                     </Link>\n//                     <Button\n//                       aria-label=\"Follow\"\n//                       variant=\"contained\"\n//                       color=\"primary\"\n//                       onClick={() => {\n//                         clickFollow(item, i);\n//                       }}\n//                     >\n//                       Follow\n//                     </Button>\n//                   </ListItemSecondaryAction>\n//                 </ListItem>\n//               </span>\n//             );\n//           })}\n//         </List>\n//       </Paper>\n//       <Snackbar\n//         anchorOrigin={{\n//           vertical: 'bottom',\n//           horizontal: 'right',\n//         }}\n//         open={values.open}\n//         onClose={handleRequestClose}\n//         autoHideDuration={6000}\n//         message={<span className={classes.snack}>{values.followMessage}</span>}\n//       />\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/social-frontend/src/user/FindPeople.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n// import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { Link } from 'react-router-dom';\r\n// import { findPeople, follow } from './api-user.js';\r\n// import auth from './../auth/auth-helper';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import ViewIcon from '@material-ui/icons/Visibility';\r\n// import baseURL from '../config.js';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: theme.mixins.gutters({\r\n//     padding: theme.spacing(1),\r\n//     margin: 0,\r\n//   }),\r\n//   title: {\r\n//     margin: `${theme.spacing(3)}px ${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n//     color: theme.palette.openTitle,\r\n//     fontSize: '1em',\r\n//   },\r\n//   avatar: {\r\n//     marginRight: theme.spacing(1),\r\n//   },\r\n//   follow: {\r\n//     right: theme.spacing(2),\r\n//   },\r\n//   snack: {\r\n//     color: theme.palette.protectedTitle,\r\n//   },\r\n//   viewButton: {\r\n//     verticalAlign: 'middle',\r\n//   },\r\n// }));\r\n\r\n// export default function FindPeople() {\r\n//   const classes = useStyles();\r\n//   const [values, setValues] = useState({\r\n//     users: [],\r\n//     open: false,\r\n//     followMessage: '',\r\n//   });\r\n//   const jwt = auth.isAuthenticated();\r\n\r\n//   useEffect(() => {\r\n//     const abortController = new AbortController();\r\n//     const signal = abortController.signal;\r\n\r\n//     findPeople(\r\n//       {\r\n//         userId: jwt.user._id,\r\n//       },\r\n//       {\r\n//         t: jwt.token,\r\n//       },\r\n//       signal\r\n//     ).then((data) => {\r\n//       if (data && data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         setValues({ ...values, users: data });\r\n//       }\r\n//     });\r\n//     return function cleanup() {\r\n//       abortController.abort();\r\n//     };\r\n//   }, []);\r\n//   const clickFollow = (user, index) => {\r\n//     follow(\r\n//       {\r\n//         userId: jwt.user._id,\r\n//       },\r\n//       {\r\n//         t: jwt.token,\r\n//       },\r\n//       user._id\r\n//     ).then((data) => {\r\n//       if (data.error) {\r\n//         console.log(data.error);\r\n//       } else {\r\n//         let toFollow = values.users;\r\n//         toFollow.splice(index, 1);\r\n//         setValues({ ...values, users: toFollow, open: true, followMessage: `Following ${user.name}!` });\r\n//       }\r\n//     });\r\n//   };\r\n//   const handleRequestClose = (event, reason) => {\r\n//     setValues({ ...values, open: false });\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Paper className={classes.root} elevation={4}>\r\n//         <Typography type=\"title\" className={classes.title}>\r\n//           Who to follow\r\n//         </Typography>\r\n//         <List>\r\n//           {values.users.map((item, i) => {\r\n//             return (\r\n//               <span key={i}>\r\n//                 <ListItem>\r\n//                   <ListItemAvatar className={classes.avatar}>\r\n//                     <Avatar src={baseURL + '/api/users/photo/' + item._id} />\r\n//                   </ListItemAvatar>\r\n//                   <ListItemText primary={item.name} />\r\n//                   <ListItemSecondaryAction className={classes.follow}>\r\n//                     <Link to={'/user/' + item._id}>\r\n//                       <IconButton variant=\"contained\" color=\"secondary\" className={classes.viewButton}>\r\n//                         <ViewIcon />\r\n//                       </IconButton>\r\n//                     </Link>\r\n//                     <Button\r\n//                       aria-label=\"Follow\"\r\n//                       variant=\"contained\"\r\n//                       color=\"primary\"\r\n//                       onClick={() => {\r\n//                         clickFollow(item, i);\r\n//                       }}\r\n//                     >\r\n//                       Follow\r\n//                     </Button>\r\n//                   </ListItemSecondaryAction>\r\n//                 </ListItem>\r\n//               </span>\r\n//             );\r\n//           })}\r\n//         </List>\r\n//       </Paper>\r\n//       <Snackbar\r\n//         anchorOrigin={{\r\n//           vertical: 'bottom',\r\n//           horizontal: 'right',\r\n//         }}\r\n//         open={values.open}\r\n//         onClose={handleRequestClose}\r\n//         autoHideDuration={6000}\r\n//         message={<span className={classes.snack}>{values.followMessage}</span>}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}