{"ast":null,"code":"var _jsxFileName = \"D:\\\\social-frontend\\\\src\\\\post\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport auth from \"../auth/auth-helper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Icon from \"@material-ui/core/Icon\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { comment, uncomment } from \"./api-post.js\";\nimport { Link } from \"react-router-dom\";\nimport baseURL from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  cardHeader: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  smallAvatar: {\n    width: 25,\n    height: 25\n  },\n  commentField: {\n    width: \"96%\"\n  },\n  commentText: {\n    backgroundColor: \"white\",\n    padding: theme.spacing(1),\n    margin: `2px ${theme.spacing(2)}px 2px 2px`\n  },\n  commentDate: {\n    display: \"block\",\n    color: \"gray\",\n    fontSize: \"0.8em\"\n  },\n  commentDelete: {\n    fontSize: \"1.6em\",\n    verticalAlign: \"middle\",\n    cursor: \"pointer\"\n  }\n}));\nexport default function Comments(props) {\n  _s();\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const jwt = auth.isAuthenticated();\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const addComment = event => {\n    if (event.keyCode == 13 && event.target.value) {\n      event.preventDefault();\n      comment({\n        userId: jwt.user.id\n      }, {\n        t: jwt.accessToken\n      }, props.postId, {\n        text: text\n      }).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          setText(\"\");\n          props.updateComments(data.comments);\n        }\n      });\n    }\n  };\n  const deleteComment = comment => event => {\n    uncomment({\n      userId: jwt.user._id\n    }, {\n      t: jwt.token\n    }, props.postId, comment).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        props.updateComments(data.comments);\n      }\n    });\n  };\n  const commentBody = item => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.commentText,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/user/\" + item.postedBy._id,\n        children: item.postedBy.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), item.text, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.commentDate,\n        children: [new Date(item.created).toDateString(), \" |\", auth.isAuthenticated().user._id === item.postedBy._id && /*#__PURE__*/_jsxDEV(Icon, {\n          onClick: deleteComment(item),\n          className: classes.commentDelete,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.smallAvatar,\n        src: baseURL + \"/api/users/photo/\" + auth.isAuthenticated().user._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this),\n      title: /*#__PURE__*/_jsxDEV(TextField, {\n        onKeyDown: addComment,\n        multiline: true,\n        value: text,\n        onChange: handleChange,\n        placeholder: \"Write something ...\",\n        className: classes.commentField,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this),\n      className: classes.cardHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), props.comments.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.smallAvatar,\n          src: baseURL + \"/api/users/photo/\" + item.postedBy._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this),\n        title: commentBody(item),\n        className: classes.cardHeader\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"HiBFSJMVT7XY25M/ZmPAyuSmc44=\", false, function () {\n  return [useStyles];\n});\n_c = Comments;\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  updateComments: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","auth","CardHeader","TextField","Avatar","Icon","PropTypes","makeStyles","comment","uncomment","Link","baseURL","useStyles","theme","cardHeader","paddingTop","spacing","paddingBottom","smallAvatar","width","height","commentField","commentText","backgroundColor","padding","margin","commentDate","display","color","fontSize","commentDelete","verticalAlign","cursor","Comments","props","classes","text","setText","jwt","isAuthenticated","handleChange","event","target","value","addComment","keyCode","preventDefault","userId","user","id","t","accessToken","postId","then","data","error","console","log","updateComments","comments","deleteComment","_id","token","commentBody","item","postedBy","name","Date","created","toDateString","map","i","propTypes","string","isRequired","array","func"],"sources":["D:/social-frontend/src/post/Comments.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport auth from \"../auth/auth-helper\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { comment, uncomment } from \"./api-post.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport baseURL from \"../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardHeader: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  smallAvatar: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  commentField: {\r\n    width: \"96%\",\r\n  },\r\n  commentText: {\r\n    backgroundColor: \"white\",\r\n    padding: theme.spacing(1),\r\n    margin: `2px ${theme.spacing(2)}px 2px 2px`,\r\n  },\r\n  commentDate: {\r\n    display: \"block\",\r\n    color: \"gray\",\r\n    fontSize: \"0.8em\",\r\n  },\r\n  commentDelete: {\r\n    fontSize: \"1.6em\",\r\n    verticalAlign: \"middle\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport default function Comments(props) {\r\n  const classes = useStyles();\r\n  const [text, setText] = useState(\"\");\r\n  const jwt = auth.isAuthenticated();\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const addComment = (event) => {\r\n    if (event.keyCode == 13 && event.target.value) {\r\n      event.preventDefault();\r\n      comment(\r\n        {\r\n          userId: jwt.user.id,\r\n        },\r\n        {\r\n          t: jwt.accessToken,\r\n        },\r\n        props.postId,\r\n        { text: text }\r\n      ).then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          setText(\"\");\r\n          props.updateComments(data.comments);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteComment = (comment) => (event) => {\r\n    uncomment(\r\n      {\r\n        userId: jwt.user._id,\r\n      },\r\n      {\r\n        t: jwt.token,\r\n      },\r\n      props.postId,\r\n      comment\r\n    ).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        props.updateComments(data.comments);\r\n      }\r\n    });\r\n  };\r\n\r\n  const commentBody = (item) => {\r\n    return (\r\n      <p className={classes.commentText}>\r\n        <Link to={\"/user/\" + item.postedBy._id}>{item.postedBy.name}</Link>\r\n        <br />\r\n        {item.text}\r\n        <span className={classes.commentDate}>\r\n          {new Date(item.created).toDateString()} |\r\n          {auth.isAuthenticated().user._id === item.postedBy._id && (\r\n            <Icon\r\n              onClick={deleteComment(item)}\r\n              className={classes.commentDelete}\r\n            >\r\n              delete\r\n            </Icon>\r\n          )}\r\n        </span>\r\n      </p>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            className={classes.smallAvatar}\r\n            src={\r\n              baseURL + \"/api/users/photo/\" + auth.isAuthenticated().user._id\r\n            }\r\n          />\r\n        }\r\n        title={\r\n          <TextField\r\n            onKeyDown={addComment}\r\n            multiline\r\n            value={text}\r\n            onChange={handleChange}\r\n            placeholder=\"Write something ...\"\r\n            className={classes.commentField}\r\n            margin=\"normal\"\r\n          />\r\n        }\r\n        className={classes.cardHeader}\r\n      />\r\n      {props.comments.map((item, i) => {\r\n        return (\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar\r\n                className={classes.smallAvatar}\r\n                src={baseURL + \"/api/users/photo/\" + item.postedBy._id}\r\n              />\r\n            }\r\n            title={commentBody(item)}\r\n            className={classes.cardHeader}\r\n            key={i}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comments: PropTypes.array.isRequired,\r\n  updateComments: PropTypes.func.isRequired,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}